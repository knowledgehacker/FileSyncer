Issues:
(1) When the sync hasn't completed, it should continue HttpSyncClient is started next time.

(0) Test whether the server works well when many users connect and sync files to it.
(1) Support user authentication(use Jetty built-in feature?) and user management(use MySQL or Bekerley DB database and JDBC to access it?).
(2) Support accessing and manipulating files stored in server repository via web pages(use AJAX?).
(3) Support synchronize files among multiple devices belonging to one user, just like Dropbox(use publish/subscribe model in ActiveMQ, or write a
messaging component supporting publish/subscribe model by myself?). 
(4) Support customizable configuration of server and client settings(use xml?).
(5) Support sync via SSH protocol.

Futher improvement:
(1) Refactor server and client code using WebSocket protocol and Servlet 3.1 Asynchronous I/O API to support server push and Async I/O.
(2) Does Jetty provides good load balancing mechanism? Can be integrate Apache Camel to provide good load balancing support?
